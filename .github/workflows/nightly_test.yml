name: Nightly Test

on:
  #pull_request:
  schedule:
    - cron: '0 13 * * *' # GMT time, 13:00 GMT == 21:00 China
  workflow_dispatch:
    inputs:
      artifact:
        description: 'select which job to run("all" will make all jobs run)'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - Orca-Python-ExampleTest-Py37-Spark3
        - Orca-Python-ExampleTest-Ray-Py37-Spark3
        - Orca-Jep-ExampleTest-Py37-Spark2
        - Orca-Python-Ray-Py37-Spark3
        - Orca-Python-Py37-Spark3
        - Orca-Ray-Ctx-Example
        - Orca-Python-Horovod-Tf2-Py37-Spark3
        - Dllib-Scala-UT
        - Friesian-Scala-UT
        - PPML-Scala-UT
      
        

permissions:
  contents: read
  packages: write

jobs:
  Orca-Python-ExampleTest-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-ExampleTest-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/orca-python-exampletest-action
      
  Dllib-Python-Integration:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Dllib-Python-Integration' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, dllib-integration]

    steps:
    - uses: actions/checkout@v3
    - name: Run test
      uses: ./.github/actions/dllib-integration.yml
      
  Orca-Python-ExampleTest-Ray-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-ExampleTest-Ray-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/orca-python-exampletest-ray-action

  Orca-Jep-ExampleTest-Py37-Spark2:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Jep-ExampleTest-Py37-Spark2' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/orca-jep-exampletest-action

  Orca-Python-Ray-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Ray-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/orca-python-ray-py37-spark3-action

  Orca-Python-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/orca-python-py37-spark3-action

  Orca-Python-Horovod-Tf2-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Horovod-Tf2-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-horovod-tf2-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-horovod-tf2-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env

      
  Dllib-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Dllib-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up maven
        uses: ./.github/actions/maven-setup-action
      - name: Run test
        uses: ./.github/actions/dllib-scala-ut-action
      
  Friesian-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, ubuntu-20.04-lts, CLX, AVX512, Ettenmoors ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up maven
        uses: ./.github/actions/maven-setup-action
      - name: Run test
        uses: ./.github/actions/friesian-scala-ut-action
      
  PPML-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up maven
        uses: ./.github/actions/maven-setup-action
      - name: Run test
        uses: ./.github/actions/ppml-scala-ut-action

  Orca-Ray-Ctx-Example:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Ray-Ctx-Example' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin-resources, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/orca-ray-ctx-example-action

  create-workflow-badge:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: create workflow badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: bc8a699b455bced4a1aef138ad5df07e
        file-name: nightly-test.json
        type: workflow
